'use client';

import React, { useState, useEffect } from 'react';
import { ProductGrid } from '@/modules/product/components';
import { Product } from '@/modules/product/types';

// Fallback product data in case the real data fails to load
const fallbackProducts: Product[] = [
  {
    id: 'fallback-director-chair-1',
    slug: 'fallback-director-chair-1',
    name: 'Premium Director Chair',
    description: 'A high-quality director chair for professional use.',
    categorySlug: 'chairs',
    seriesSlug: 'director-series',
    images: ['fallback-image-1'],
    variants: [
      {
        id: 'variant-1',
        variantId: 'hb',
        variantName: 'High Back',
        isAvailable: true,
        images: [],
        specifications: {}
      }
    ],
    specifications: {},
    featured: true
  },
  {
    id: 'fallback-director-chair-2',
    slug: 'fallback-director-chair-2',
    name: 'Standard Director Chair',
    description: 'A reliable director chair for everyday use.',
    categorySlug: 'chairs',
    seriesSlug: 'director-series',
    images: ['fallback-image-2'],
    variants: [
      {
        id: 'variant-2',
        variantId: 'mb',
        variantName: 'Medium Back',
        isAvailable: true,
        images: [],
        specifications: {}
      }
    ],
    specifications: {},
    featured: false
  }
];

/**
 * DirectorSeriesPage component for displaying the director series products
 */
export default function DirectorSeriesPage() {
  const [products, setProducts] = useState<Product[]>([]);
  const [isLoading, setIsLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);
  
  useEffect(() => {
    // Load products when the component mounts
    async function loadProducts() {
      try {
        setIsLoading(true);
        setError(null);
        
        console.log('Loading products for director series...');
        
        // Import ProductService dynamically to avoid server/client mismatch
        const productModule = await import('@/modules/product/services/product-service');
        console.log('ProductService imported:', !!productModule.ProductService);
        
        if (!productModule.ProductService) {
          throw new Error('ProductService not found in imported module');
        }
        
        const directorSeriesProducts = await productModule.ProductService.getProductsBySeriesSlug('chairs', 'director-series');
        console.log('Products loaded:', directorSeriesProducts.length);
        
        if (directorSeriesProducts.length === 0) {
          console.log('No products found, using fallback data');
        }
        
        setProducts(directorSeriesProducts);
        setIsLoading(false);
      } catch (error) {
        console.error('Error loading products:', error);
        setError(`Failed to load products. Error: ${error instanceof Error ? error.message : String(error)}`);
        setIsLoading(false);
      }
    }
    
    loadProducts();
  }, []);
  
  // Display a loading spinner while data is being fetched
  if (isLoading) {
    return (
      <div className="flex items-center justify-center min-h-[400px]">
        <div className="w-12 h-12 border-4 border-gray-300 border-t-red-600 rounded-full animate-spin"></div>
      </div>
    );
  }
  
  // Display an error message if there was a problem loading the data
  if (error) {
    return (
      <div className="p-6 bg-red-50 rounded-lg text-red-600 dark:bg-red-900/20 dark:text-red-400">
        <h2 className="text-xl font-bold mb-2">Error</h2>
        <p>{error}</p>
        <div className="mt-4">
          <h3 className="text-lg font-semibold mb-2">Showing fallback products instead:</h3>
          <ProductGrid products={fallbackProducts} />
        </div>
      </div>
    );
  }
  
  // Use fallback products if no real products are available
  const displayProducts = products.length > 0 ? products : fallbackProducts;
  
  return (
    <div className="container mx-auto px-4 py-8">
      <h1 className="text-3xl font-bold mb-6 text-gray-900 dark:text-white">
        Director Series Chairs
      </h1>
      
      <p className="mb-8 text-gray-700 dark:text-gray-300 max-w-3xl">
        Our Director Series chairs combine premium materials with ergonomic design,
        perfect for professional environments that demand both style and comfort.
      </p>
      
      <ProductGrid products={displayProducts} />
    </div>
  );
}